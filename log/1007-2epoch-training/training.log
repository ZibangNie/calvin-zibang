[2025-10-07 15:53:06,826][calvin_agent.models.decoders.logistic_policy_network][INFO] - Loaded action bounds from /root/autodl-tmp/work/calvin/dataset/calvin_debug_dataset/training/statistics.yaml
[2025-10-07 15:53:06,860][__main__][INFO] - Training with the following config:
callbacks:
  rollout:
    tasks:
      _target_: calvin_env.envs.tasks.Tasks
      tasks:
        rotate_red_block_right:
        - rotate_object
        - block_red
        - -60
        rotate_red_block_left:
        - rotate_object
        - block_red
        - 60
        rotate_blue_block_right:
        - rotate_object
        - block_blue
        - -60
        rotate_blue_block_left:
        - rotate_object
        - block_blue
        - 60
        rotate_pink_block_right:
        - rotate_object
        - block_pink
        - -60
        rotate_pink_block_left:
        - rotate_object
        - block_pink
        - 60
        push_red_block_right:
        - push_object
        - block_red
        - 0.1
        - 0
        push_red_block_left:
        - push_object
        - block_red
        - -0.1
        - 0
        push_blue_block_right:
        - push_object
        - block_blue
        - 0.1
        - 0
        push_blue_block_left:
        - push_object
        - block_blue
        - -0.1
        - 0
        push_pink_block_right:
        - push_object
        - block_pink
        - 0.1
        - 0
        push_pink_block_left:
        - push_object
        - block_pink
        - -0.1
        - 0
        move_slider_left:
        - move_door_rel
        - base__slide
        - 0.15
        move_slider_right:
        - move_door_rel
        - base__slide
        - -0.15
        open_drawer:
        - move_door_rel
        - base__drawer
        - 0.12
        close_drawer:
        - move_door_rel
        - base__drawer
        - -0.12
        lift_red_block_table:
        - lift_object
        - block_red
        - 0.05
        - table
        - base_link
        lift_red_block_slider:
        - lift_object
        - block_red
        - 0.03
        - table
        - plank_link
        lift_red_block_drawer:
        - lift_object
        - block_red
        - 0.05
        - table
        - drawer_link
        lift_blue_block_table:
        - lift_object
        - block_blue
        - 0.05
        - table
        - base_link
        lift_blue_block_slider:
        - lift_object
        - block_blue
        - 0.03
        - table
        - plank_link
        lift_blue_block_drawer:
        - lift_object
        - block_blue
        - 0.05
        - table
        - drawer_link
        lift_pink_block_table:
        - lift_object
        - block_pink
        - 0.05
        - table
        - base_link
        lift_pink_block_slider:
        - lift_object
        - block_pink
        - 0.03
        - table
        - plank_link
        lift_pink_block_drawer:
        - lift_object
        - block_pink
        - 0.05
        - table
        - drawer_link
        place_in_slider:
        - place_object
        - table
        - plank_link
        place_in_drawer:
        - place_object
        - table
        - drawer_link
        stack_block:
        - stack_objects
        unstack_block:
        - unstack_objects
        turn_on_lightbulb:
        - toggle_light
        - lightbulb
        - 0
        - 1
        turn_off_lightbulb:
        - toggle_light
        - lightbulb
        - 1
        - 0
        turn_on_led:
        - toggle_light
        - led
        - 0
        - 1
        turn_off_led:
        - toggle_light
        - led
        - 1
        - 0
        push_into_drawer:
        - push_object_into
        - - block_red
          - block_blue
          - block_pink
        - table
        - base_link
        - table
        - drawer_link
    val_annotations:
      rotate_red_block_right:
      - take the red block and rotate it to the right
      rotate_red_block_left:
      - take the red block and rotate it to the left
      rotate_blue_block_right:
      - take the blue block and rotate it to the right
      rotate_blue_block_left:
      - take the blue block and rotate it to the left
      rotate_pink_block_right:
      - take the pink block and rotate it to the right
      rotate_pink_block_left:
      - take the pink block and rotate it to the left
      push_red_block_right:
      - go push the red block right
      push_red_block_left:
      - go push the red block left
      push_blue_block_right:
      - go push the blue block right
      push_blue_block_left:
      - go push the blue block left
      push_pink_block_right:
      - go push the pink block right
      push_pink_block_left:
      - go push the pink block left
      move_slider_left:
      - push the sliding door to the left side
      move_slider_right:
      - push the sliding door to the right side
      open_drawer:
      - pull the handle to open the drawer
      close_drawer:
      - push the handle to close the drawer
      lift_red_block_table:
      - grasp and lift the red block
      lift_blue_block_table:
      - grasp and lift the blue block
      lift_pink_block_table:
      - grasp and lift the pink block
      lift_red_block_slider:
      - lift the red block from the sliding cabinet
      lift_blue_block_slider:
      - lift the blue block from the sliding cabinet
      lift_pink_block_slider:
      - lift the pink block from the sliding cabinet
      lift_red_block_drawer:
      - Take the red block from the drawer
      lift_blue_block_drawer:
      - Take the blue block from the drawer
      lift_pink_block_drawer:
      - Take the pink block from the drawer
      place_in_slider:
      - store the grasped block in the sliding cabinet
      place_in_drawer:
      - store the grasped block in the drawer
      push_into_drawer:
      - slide the block that it falls into the drawer
      stack_block:
      - stack the grasped block
      unstack_block:
      - remove the stacked block
      turn_on_lightbulb:
      - use the switch to turn on the light bulb
      turn_off_lightbulb:
      - use the switch to turn off the light bulb
      turn_on_led:
      - press the button to turn on the led light
      turn_off_led:
      - press the button to turn off the led light
    _target_: calvin_agent.rollout.rollout.Rollout
    _recursive_: false
    env_cfg:
      _target_: calvin_agent.wrappers.calvin_env_wrapper.CalvinEnvWrapper
    skip_epochs: 1
    rollout_freq: 1
    video: true
    num_rollouts_per_task: 10
    check_percentage_of_batch: 1
    ep_len: 120
    empty_cache: true
    log_video_to_file: false
    save_dir: ./videos
    add_goal_thumbnail: true
    min_window_size: ${datamodule.datasets.vision_dataset.min_window_size}
    max_window_size: ${datamodule.datasets.vision_dataset.max_window_size}
    id_selection_strategy: select_longest
    lang_folder: ${datamodule.datasets.lang_dataset.lang_folder}
  rollout_lh:
    tasks:
      _target_: calvin_env.envs.tasks.Tasks
      tasks:
        rotate_red_block_right:
        - rotate_object
        - block_red
        - -60
        rotate_red_block_left:
        - rotate_object
        - block_red
        - 60
        rotate_blue_block_right:
        - rotate_object
        - block_blue
        - -60
        rotate_blue_block_left:
        - rotate_object
        - block_blue
        - 60
        rotate_pink_block_right:
        - rotate_object
        - block_pink
        - -60
        rotate_pink_block_left:
        - rotate_object
        - block_pink
        - 60
        push_red_block_right:
        - push_object
        - block_red
        - 0.1
        - 0
        push_red_block_left:
        - push_object
        - block_red
        - -0.1
        - 0
        push_blue_block_right:
        - push_object
        - block_blue
        - 0.1
        - 0
        push_blue_block_left:
        - push_object
        - block_blue
        - -0.1
        - 0
        push_pink_block_right:
        - push_object
        - block_pink
        - 0.1
        - 0
        push_pink_block_left:
        - push_object
        - block_pink
        - -0.1
        - 0
        move_slider_left:
        - move_door_rel
        - base__slide
        - 0.15
        move_slider_right:
        - move_door_rel
        - base__slide
        - -0.15
        open_drawer:
        - move_door_rel
        - base__drawer
        - 0.12
        close_drawer:
        - move_door_rel
        - base__drawer
        - -0.12
        lift_red_block_table:
        - lift_object
        - block_red
        - 0.05
        - table
        - base_link
        lift_red_block_slider:
        - lift_object
        - block_red
        - 0.03
        - table
        - plank_link
        lift_red_block_drawer:
        - lift_object
        - block_red
        - 0.05
        - table
        - drawer_link
        lift_blue_block_table:
        - lift_object
        - block_blue
        - 0.05
        - table
        - base_link
        lift_blue_block_slider:
        - lift_object
        - block_blue
        - 0.03
        - table
        - plank_link
        lift_blue_block_drawer:
        - lift_object
        - block_blue
        - 0.05
        - table
        - drawer_link
        lift_pink_block_table:
        - lift_object
        - block_pink
        - 0.05
        - table
        - base_link
        lift_pink_block_slider:
        - lift_object
        - block_pink
        - 0.03
        - table
        - plank_link
        lift_pink_block_drawer:
        - lift_object
        - block_pink
        - 0.05
        - table
        - drawer_link
        place_in_slider:
        - place_object
        - table
        - plank_link
        place_in_drawer:
        - place_object
        - table
        - drawer_link
        stack_block:
        - stack_objects
        unstack_block:
        - unstack_objects
        turn_on_lightbulb:
        - toggle_light
        - lightbulb
        - 0
        - 1
        turn_off_lightbulb:
        - toggle_light
        - lightbulb
        - 1
        - 0
        turn_on_led:
        - toggle_light
        - led
        - 0
        - 1
        turn_off_led:
        - toggle_light
        - led
        - 1
        - 0
        push_into_drawer:
        - push_object_into
        - - block_red
          - block_blue
          - block_pink
        - table
        - base_link
        - table
        - drawer_link
    val_annotations:
      rotate_red_block_right:
      - take the red block and rotate it to the right
      rotate_red_block_left:
      - take the red block and rotate it to the left
      rotate_blue_block_right:
      - take the blue block and rotate it to the right
      rotate_blue_block_left:
      - take the blue block and rotate it to the left
      rotate_pink_block_right:
      - take the pink block and rotate it to the right
      rotate_pink_block_left:
      - take the pink block and rotate it to the left
      push_red_block_right:
      - go push the red block right
      push_red_block_left:
      - go push the red block left
      push_blue_block_right:
      - go push the blue block right
      push_blue_block_left:
      - go push the blue block left
      push_pink_block_right:
      - go push the pink block right
      push_pink_block_left:
      - go push the pink block left
      move_slider_left:
      - push the sliding door to the left side
      move_slider_right:
      - push the sliding door to the right side
      open_drawer:
      - pull the handle to open the drawer
      close_drawer:
      - push the handle to close the drawer
      lift_red_block_table:
      - grasp and lift the red block
      lift_blue_block_table:
      - grasp and lift the blue block
      lift_pink_block_table:
      - grasp and lift the pink block
      lift_red_block_slider:
      - lift the red block from the sliding cabinet
      lift_blue_block_slider:
      - lift the blue block from the sliding cabinet
      lift_pink_block_slider:
      - lift the pink block from the sliding cabinet
      lift_red_block_drawer:
      - Take the red block from the drawer
      lift_blue_block_drawer:
      - Take the blue block from the drawer
      lift_pink_block_drawer:
      - Take the pink block from the drawer
      place_in_slider:
      - store the grasped block in the sliding cabinet
      place_in_drawer:
      - store the grasped block in the drawer
      push_into_drawer:
      - slide the block that it falls into the drawer
      stack_block:
      - stack the grasped block
      unstack_block:
      - remove the stacked block
      turn_on_lightbulb:
      - use the switch to turn on the light bulb
      turn_off_lightbulb:
      - use the switch to turn off the light bulb
      turn_on_led:
      - press the button to turn on the led light
      turn_off_led:
      - press the button to turn off the led light
    _target_: calvin_agent.rollout.rollout_long_horizon.RolloutLongHorizon
    _recursive_: false
    env_cfg:
      _target_: calvin_agent.wrappers.calvin_env_wrapper.CalvinEnvWrapper
    skip_epochs: 1
    rollout_freq: 1
    num_videos: 16
    num_sequences: 128
    replan_freq: 30
    ep_len: 360
    empty_cache: true
    log_video_to_file: false
    save_dir: ./videos
    lang_folder: ${datamodule.datasets.lang_dataset.lang_folder}
    debug: false
  checkpoint:
    _target_: pytorch_lightning.callbacks.ModelCheckpoint
    save_top_k: -1
    verbose: true
    dirpath: saved_models
    filename: '{epoch}'
  tsne_plot:
    _target_: calvin_agent.visualization.tsne_plot.TSNEPlot
    perplexity: 40
    n_jobs: 8
    plot_percentage: 0.2
    opacity: 0.3
    marker_size: 5
  kl_schedule:
    _target_: calvin_agent.utils.kl_callbacks.KLConstantSchedule
datamodule:
  datasets:
    vision_dataset:
      _target_: calvin_agent.datasets.disk_dataset.DiskDataset
      key: vis
      save_format: npz
      batch_size: 32
      min_window_size: 16
      max_window_size: 32
      proprio_state: ${datamodule.proprioception_dims}
      obs_space: ${datamodule.observation_space}
      pad: true
      lang_folder: lang_annotations
      num_workers: 4
    lang_dataset:
      _target_: calvin_agent.datasets.disk_dataset.DiskDataset
      key: lang
      save_format: npz
      batch_size: 32
      min_window_size: 16
      max_window_size: 32
      proprio_state: ${datamodule.proprioception_dims}
      obs_space: ${datamodule.observation_space}
      skip_frames: 1
      pad: true
      lang_folder: lang_annotations
      num_workers: 4
  transforms:
    train:
      rgb_static:
      - _target_: torchvision.transforms.Resize
        size: 200
      - _target_: calvin_agent.utils.transforms.ScaleImageTensor
      - _target_: torchvision.transforms.Normalize
        mean:
        - 0.5
        std:
        - 0.5
      - _target_: calvin_agent.utils.transforms.AddGaussianNoise
        mean:
        - 0.0
        std:
        - 0.01
      rgb_gripper:
      - _target_: torchvision.transforms.Resize
        size: 84
      - _target_: calvin_agent.utils.transforms.ScaleImageTensor
      - _target_: torchvision.transforms.Normalize
        mean:
        - 0.5
        std:
        - 0.5
      - _target_: calvin_agent.utils.transforms.AddGaussianNoise
        mean:
        - 0.0
        std:
        - 0.01
      depth_static:
      - _target_: torchvision.transforms.Resize
        size: 200
      - _target_: calvin_agent.utils.transforms.AddDepthNoise
        shape:
        - 1000.0
        rate:
        - 1000.0
      - _target_: calvin_agent.utils.transforms.AddGaussianNoise
        mean:
        - 0.0
        std:
        - 0.01
      depth_gripper:
      - _target_: torchvision.transforms.Resize
        size: 84
      - _target_: calvin_agent.utils.transforms.AddGaussianNoise
        mean:
        - 0.0
        std:
        - 0.01
      rgb_tactile:
      - _target_: torchvision.transforms.Resize
        size: 70
      - _target_: torchvision.transforms.RandomCrop
        size: 64
      - _target_: calvin_agent.utils.transforms.ScaleImageTensor
      - _target_: torchvision.transforms.Normalize
        mean:
        - 0.5
        std:
        - 0.5
      - _target_: calvin_agent.utils.transforms.AddGaussianNoise
        mean:
        - 0.0
        std:
        - 0.01
      depth_tactile:
      - _target_: torchvision.transforms.Resize
        size: 64
      - _target_: torchvision.transforms.Normalize
        mean:
        - 0.1
        std:
        - 0.2
      - _target_: calvin_agent.utils.transforms.AddGaussianNoise
        mean:
        - 0.0
        std:
        - 0.01
      robot_obs:
      - _target_: calvin_agent.utils.transforms.NormalizeVector
      - _target_: calvin_agent.utils.transforms.AddGaussianNoise
        mean:
        - 0.0
        std:
        - 0.01
      scene_obs:
      - _target_: calvin_agent.utils.transforms.NormalizeVector
      - _target_: calvin_agent.utils.transforms.AddGaussianNoise
        mean:
        - 0.0
        std:
        - 0.01
    val:
      rgb_static:
      - _target_: torchvision.transforms.Resize
        size: 200
      - _target_: calvin_agent.utils.transforms.ScaleImageTensor
      - _target_: torchvision.transforms.Normalize
        mean:
        - 0.5
        std:
        - 0.5
      rgb_gripper:
      - _target_: torchvision.transforms.Resize
        size: 84
      - _target_: calvin_agent.utils.transforms.ScaleImageTensor
      - _target_: torchvision.transforms.Normalize
        mean:
        - 0.5
        std:
        - 0.5
      depth_static:
      - _target_: torchvision.transforms.Resize
        size: 200
      depth_gripper:
      - _target_: torchvision.transforms.Resize
        size: 84
      rgb_tactile:
      - _target_: torchvision.transforms.Resize
        size: 70
      - _target_: torchvision.transforms.RandomCrop
        size: 64
      - _target_: calvin_agent.utils.transforms.ScaleImageTensor
      - _target_: torchvision.transforms.Normalize
        mean:
        - 0.5
        std:
        - 0.5
      depth_tactile:
      - _target_: torchvision.transforms.Resize
        size: 64
      - _target_: torchvision.transforms.Normalize
        mean:
        - 0.1
        std:
        - 0.2
      robot_obs:
      - _target_: calvin_agent.utils.transforms.NormalizeVector
      scene_obs:
      - _target_: calvin_agent.utils.transforms.NormalizeVector
  proprioception_dims:
    n_state_obs: 8
    keep_indices:
    - - 0
      - 7
    - - 14
      - 15
    robot_orientation_idx:
    - 3
    - 6
    normalize: true
    normalize_robot_orientation: true
  observation_space:
    rgb_obs:
    - rgb_static
    depth_obs: []
    state_obs:
    - robot_obs
    actions:
    - actions
    language:
    - language
  _target_: calvin_agent.datasets.calvin_data_module.CalvinDataModule
  _recursive_: false
  root_data_dir: /root/autodl-tmp/work/calvin/dataset/calvin_debug_dataset
  action_space: 7
  action_max:
  - 1.0
  - 1.0
  - 1.0
  - 1.0
  - 1.0
  - 1.0
  - 1.0
  action_min:
  - -1.0
  - -1.0
  - -1.0
  - -1.0
  - -1.0
  - -1.0
  - -1
  shuffle_val: false
model:
  perceptual_encoder:
    vision_static:
      _target_: calvin_agent.models.perceptual_encoders.vision_network.VisionNetwork
      input_width: 200
      input_height: 200
      activation_function: ReLU
      dropout_vis_fc: 0.0
      l2_normalize_output: false
      visual_features: 64
      num_c: 3
    vision_gripper: {}
    depth_static: {}
    depth_gripper: {}
    proprio:
      _target_: calvin_agent.models.perceptual_encoders.proprio_encoder.IdentityEncoder
      proprioception_dims: ${datamodule.proprioception_dims}
    tactile: {}
    _target_: calvin_agent.models.perceptual_encoders.concat_encoders.ConcatEncoders
    _recursive_: false
  plan_proposal:
    _target_: calvin_agent.models.plan_encoders.plan_proposal_net.PlanProposalNetwork
    perceptual_features: ???
    latent_goal_features: 32
    plan_features: 256
    activation_function: ReLU
    min_std: 0.0001
  plan_recognition:
    _target_: calvin_agent.models.plan_encoders.plan_recognition_net.PlanRecognitionNetwork
    in_features: ???
    plan_features: 256
    action_space: ${datamodule.action_space}
    birnn_dropout_p: 0.0
    min_std: 0.0001
  visual_goal:
    _target_: calvin_agent.models.encoders.goal_encoders.VisualGoalEncoder
    in_features: ???
    hidden_size: 2048
    latent_goal_features: 32
    l2_normalize_goal_embeddings: false
    activation_function: ReLU
  language_goal:
    _target_: calvin_agent.models.encoders.goal_encoders.LanguageGoalEncoder
    language_features: 384
    hidden_size: 2048
    latent_goal_features: 32
    word_dropout_p: 0.0
    l2_normalize_goal_embeddings: false
    activation_function: ReLU
  action_decoder:
    _target_: calvin_agent.models.decoders.logistic_policy_network.LogisticPolicyNetwork
    n_mixtures: 10
    hidden_size: 2048
    out_features: ${datamodule.action_space}
    log_scale_min: -7.0
    act_max_bound: ${datamodule.action_max}
    act_min_bound: ${datamodule.action_min}
    dataset_dir: ${datamodule.root_data_dir}
    policy_rnn_dropout_p: 0.0
    load_action_bounds: true
    num_classes: 256
    perceptual_features: ??
    latent_goal_features: 32
    plan_features: 256
  optimizer:
    _target_: torch.optim.Adam
    lr: ${training.lr}
  _target_: calvin_agent.models.mcil.MCIL
  _recursive_: false
  kl_beta: ${loss.kl_beta}
  replan_freq: 30
loss:
  kl_beta: 0.001
training:
  lr: 0.0001
trainer:
  devices: 1
  accelerator: gpu
  precision: 16
  val_check_interval: 1.0
  max_epochs: 2
logger:
  _target_: pytorch_lightning.loggers.WandbLogger
  save_dir: wandb_logs
  name: baseline-2epoch-full
  group: play_lmp
  log_model: false
  project: calvin-training
  id: ???
seed: 42
log_dir: ../
slurm: false

[2025-10-07 15:53:06,891][__main__][INFO] - Repo commit hash: 2e69b3bd382c4befeb2720b414104f4a4f54e358
[2025-10-07 15:53:06,985][__main__][INFO] - * CUDA:
	- GPU:
		- NVIDIA GeForce RTX 4090
	- available:         True
	- version:           11.7
* Packages:
	- numpy:             1.26.4
	- pyTorch_debug:     False
	- pyTorch_version:   1.13.1+cu117
	- pytorch-lightning: 1.8.6
	- tqdm:              4.67.1
[2025-10-07 15:53:10,848][calvin_agent.datasets.base_dataset][INFO] - loading dataset at /root/autodl-tmp/work/calvin/dataset/calvin_debug_dataset/training
[2025-10-07 15:53:10,849][calvin_agent.datasets.base_dataset][INFO] - finished loading dataset
[2025-10-07 15:53:10,850][calvin_agent.datasets.disk_dataset][INFO] - Found "ep_start_end_ids.npy" with 1 episodes.
[2025-10-07 15:53:10,862][calvin_agent.datasets.base_dataset][INFO] - loading dataset at /root/autodl-tmp/work/calvin/dataset/calvin_debug_dataset/validation
[2025-10-07 15:53:10,863][calvin_agent.datasets.base_dataset][INFO] - finished loading dataset
[2025-10-07 15:53:10,863][calvin_agent.datasets.disk_dataset][INFO] - Found "ep_start_end_ids.npy" with 1 episodes.
[2025-10-07 15:53:10,875][calvin_agent.datasets.base_dataset][INFO] - loading dataset at /root/autodl-tmp/work/calvin/dataset/calvin_debug_dataset/training
[2025-10-07 15:53:10,876][calvin_agent.datasets.base_dataset][INFO] - finished loading dataset
[2025-10-07 15:53:10,889][calvin_agent.datasets.base_dataset][INFO] - loading dataset at /root/autodl-tmp/work/calvin/dataset/calvin_debug_dataset/validation
[2025-10-07 15:53:10,889][calvin_agent.datasets.base_dataset][INFO] - finished loading dataset
[2025-10-07 15:53:13,077][calvin_agent.wrappers.calvin_env_wrapper][INFO] - EGL_DEVICE_ID 0 <==> CUDA_DEVICE_ID 0
[2025-10-07 15:53:13,166][calvin_env.envs.play_table_env][INFO] - Loading EGL plugin (may segfault on misconfigured systems)...
[2025-10-07 15:53:13,245][calvin_env.envs.play_table_env][INFO] - Successfully loaded egl plugin
[2025-10-07 15:53:13,246][calvin_env.envs.play_table_env][INFO] - Connected to server with id: 0
[2025-10-07 15:53:13,249][calvin_env.envs.play_table_env][INFO] - Connected to server with id: 0
[2025-10-07 15:53:13,255][calvin_env.robot.robot][INFO] - Loading robot
[2025-10-07 15:53:13,265][calvin_env.envs.play_table_env][INFO] - Resetting simulation
[2025-10-07 15:53:13,267][calvin_env.envs.play_table_env][INFO] - Setting gravity
[2025-10-07 15:53:13,639][calvin_env.envs.play_table_env][INFO] - Using calvin_env with commit 1431a46bd36bde5903fb6345e68b5ccc30def666.
[2025-10-07 15:53:13,640][calvin_agent.wrappers.calvin_env_wrapper][INFO] - Initialized PlayTableEnv for device cuda:0
[2025-10-07 15:53:13,657][calvin_agent.evaluation.multistep_sequences][INFO] - Start generating evaluation sequences.
[2025-10-07 15:53:24,705][calvin_agent.evaluation.multistep_sequences][INFO] - Done generating evaluation sequences.
[2025-10-07 15:53:24,710][calvin_agent.models.mcil][INFO] - Start validation epoch 0
[2025-10-07 15:53:31,055][calvin_agent.models.mcil][INFO] - Finished validation epoch 0
[2025-10-07 15:53:31,068][calvin_agent.models.mcil][INFO] - Start training epoch 0
[2025-10-07 15:55:01,022][calvin_agent.models.mcil][INFO] - Start validation epoch 0
[2025-10-07 15:55:47,003][calvin_agent.models.mcil][INFO] - Finished validation epoch 0
[2025-10-07 15:55:49,040][calvin_agent.models.mcil][INFO] - Finished training epoch 0
[2025-10-07 15:55:49,047][calvin_agent.models.mcil][INFO] - Start training epoch 1
[2025-10-07 15:57:26,235][calvin_agent.models.mcil][INFO] - Start validation epoch 1
[2025-10-07 16:06:45,395][calvin_agent.rollout.rollout_long_horizon][INFO] - 1 / 5 subtasks: 17 / 128 sequences, SR: 13.3%
[2025-10-07 16:06:45,397][calvin_agent.rollout.rollout_long_horizon][INFO] - 2 / 5 subtasks: 2 / 128 sequences, SR: 1.6%
[2025-10-07 16:06:45,397][calvin_agent.rollout.rollout_long_horizon][INFO] - 3 / 5 subtasks: 0 / 128 sequences, SR: 0.0%
[2025-10-07 16:06:45,398][calvin_agent.rollout.rollout_long_horizon][INFO] - 4 / 5 subtasks: 0 / 128 sequences, SR: 0.0%
[2025-10-07 16:06:45,399][calvin_agent.rollout.rollout_long_horizon][INFO] - 5 / 5 subtasks: 0 / 128 sequences, SR: 0.0%
[2025-10-07 16:06:45,400][calvin_agent.rollout.rollout_long_horizon][INFO] - Average successful sequence length: 0.1
[2025-10-07 16:06:49,784][calvin_agent.models.mcil][INFO] - Finished validation epoch 1
[2025-10-07 16:06:50,989][calvin_agent.models.mcil][INFO] - Finished training epoch 1
